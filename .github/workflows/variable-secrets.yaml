name: Exploring Variables and Secrets

on: 
    workflow_dispatch:
    # schedule:
    #     - cron: "*/1 * * * *"
#    push

env:
    CONTAINER_REGISTRY: docker.io
    IMAGE_NAME: imageName
    # DOCKER_USERNAME: sfsfsf
    # DOCKER_PASSWORD: jkdfhakjf

jobs: 
    docker:
        runs-on: ubuntu-latest
        steps:
        -   name: Docker Build
            run: echo docker build -t $CONTAINER_REGISTRY/${{ vars.DOCKER_USERNAME }}/$IMAGE_NAME:latest .

        -   name: Docker Login
            run: echo docker login --username= ${{ vars.DOCKER_USERNAME }} --password= "${{ secrets.DOCKER_PASSWORD }}"

        -   name: Docker Push
            run: echo docker push $CONTAINER_REGISTRY/${{ vars.DOCKER_USERNAME }}/$IMAGE_NAME:latest
    deploy:
        needs: docker
        concurrency: 
            group: production-deployment
            cancel-in-progress: false  # cancle 1st workflow and 2nd one will run if it true nad vice versa.
        runs-on: ubuntu-latest
        steps:
        -   name: Docker Run
            timeout-minutes: 1
            run: |
                echo docker run -d -p 8080:80 $CONTAINER_REGISTRY/${{ vars.DOCKER_USERNAME }}/$IMAGE_NAME:latest
                sleep 600s

############## step level / Job level / Workflow Level #################
    # docker:
    #     runs-on: ubuntu-latest
    #     steps:
    #     -   name: Checkout repository
    #         uses: actions/checkout@v3

    #     -   name: Docker Build
    #         env:
    #             CONTAINER_REGISTRY: docker.io
    #             IMAGE_NAME: imageName
    #             DOCKER_USERNAME: sdflksdjfkl
    #         run: docker build -t $CONTAINER_REGISTRY/${{ secrets.DOCKER_USERNAME }}/$IMAGE_NAME:latest .

    #     -   name: Docker Login
    #         env:
    #             CONTAINER_REGISTRY: docker.io
    #             DOCKER_USERNAME: sdflksdjfkl
    #             DOCKER_PASSWORD: sdflksdjfkl
    #         run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login $CONTAINER_REGISTRY --username ${{ secrets.DOCKER_USERNAME }} --password-stdin

    #     -   name: Docker Push
    #         env:
    #             CONTAINER_REGISTRY: docker.io
    #             IMAGE_NAME: imageName
    #             DOCKER_USERNAME: sdflksdjfkl
    #         run: docker push $CONTAINER_REGISTRY/${{ secrets.DOCKER_USERNAME }}/$IMAGE_NAME:latest

    # deploy:
    #     needs: docker
    #     runs-on: ubuntu-latest
    #     steps:
    #     -   name: Docker Run
    #         env:
    #             CONTAINER_REGISTRY: docker.io
    #             IMAGE_NAME: imageName
    #             DOCKER_USERNAME: sdflksdjfkl
    #         run: docker run -d -p 8080:80 $CONTAINER_REGISTRY/${{ secrets.DOCKER_USERNAME }}/$IMAGE_NAME:latest